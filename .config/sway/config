set {
  $mod Mod4

  $left  h
  $down  j
  $up    k
  $right l

  # Output
  $laptop   eDP-1
  $work_out DP-3
  $hdmi     HDMI-A-1

  # Modes
  $layout_mode "Layout: |(d) stacking|(t) tabbed|(s) split|(v) splitv|(h) splith"
  $power_mode  "Power:| (F2)SCRNOFF | (F3)LCK | (F4)RBT | (F5)POFF"
  $notification_mode "Notification: | (s) Stop | (d) Default"

  # Theming
  $gnome-sound     org.gnome.desktop.sound
  $gnome-interface org.gnome.desktop.interface
  $font     pango:Hack Nerd Font, Source Code Pro 16
  $big_font pango:Hack Nerd Font, Source Code Pro 18

  # Apps
  $launch       fuzzel.sh
  $launch-dmenu fuzzel-dmenu
  $term    wezterm
  $term_id org.wezfurlong.wezterm
  $pass    keepassxc
  $pass_id org.keepassxc.KeePassXC
  $oterm    alacritty --class oterm
  $oterm_id oterm
  $editor_id emacs_float
  $editor    emacs --name $editor_id
  $browser   firefox
  $o_browser vieb.sh
  $lock sleep.sh

  $t_pos border none, move position center, resize set width 100 ppt height 100 ppt
}

output {
  $laptop background ~/images/wallpaper.png fill
  $laptop adaptive_sync on
  $laptop pos 0 0 res 1920x1080@144Hz
  $hdmi   pos 1920 0 res 2560x1440@144Hz
  $hdmi   background ~/images/wallpaper_hdmi.png fill
}

input type:keyboard {
  xkb_capslock disabled
  xkb_numlock enabled
  xkb_layout "us,ua"
  xkb_options "grp:shift_caps_switch,compose:prsc"
}

input type:touchpad {
  accel_profile adaptive
  click_method button_areas
  click_method clickfinger
  drag enabled
  dwt enabled
  middle_emulation enabled
  pointer_accel 0.8
  scroll_method two_finger
  tap enabled
}

exec_always {
  gsettings set $gnome-interface cursor-theme        'capitaine-cursors'
  gsettings set $gnome-interface cursor-size         30
  gsettings set $gnome-interface document-font-name  'Hack Nerd Font Mono 16'
  gsettings set $gnome-interface font-name           'Hack Nerd Font Mono 16'
  gsettings set $gnome-interface gtk-theme           'Gruvbox-Dark'
  gsettings set $gnome-interface gtk-color-theme     'Gruvbox-Dark'
  gsettings set $gnome-interface icon-theme          'Acid-green-folder'
  gsettings set $gnome-interface monospace-font-name 'Hack Nerd Font Mono 16'
  gsettings set $gnome-interface text-scaling-factor 1.0
  gsettings set $gnome-sound     theme-name          'deepin'
}

seat seat0 xcursor_theme capitaine-cursors 30
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:DejaVu Sans Mono 8
font $font

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal
hide_edge_borders --i3 smart

workspace_layout tabbed
workspace_auto_back_and_forth no
workspace {
  1 output $laptop
  2 output $laptop
  3 output $hdmi
}

# assings
assign {
  [app_id="com.github.rssguard"] 2
  [app_id="evolution"]           2
  [app_id="telegramdesktop"]     2
  [app_id="thunderbird"]         2
  [app_id="slack"]               3
  [app_id="zoom"]                4
  [class="(?i)Thunderbird"]      2
  [class="(?i)RSS Guard"]        2
  [class="(?i)Signal"]           2
  [class="(?i)TelegramDesktop"]  2
  [class="(?i)Viber"]            2
  [class="(?i)Slack"]            3
}

for_window {
  [shell="xwayland"] title_format "[X] %title"
  [app_id="firefox"]        inhibit_idle fullscreen
  [app_id="mpv"]            inhibit_idle focus
  [app_id="vivaldi-stable"] inhibit_idle fullscreen
  [app_id="ulauncher"]   floating enable, border none
  [app_id="zoom"]        floating enable, inhibit_idle focus
  [window_role="pop-up"] floating enable
  [window_role="bubble"] floating enable
  [window_role="dialog"] floating enable
  [window_type="dialog"] floating enable
  # main terminal
  [app_id=$term_id] {
    move to scratchpad
    [app_id=$term_id] scratchpad show
    $t_pos
  }
  # backup terminal
  [app_id=$oterm_id] {
    move to scratchpad
    [app_id=$oterm_id] scratchpad show
    $t_pos
  }
  # keepassxc
  [app_id=$pass_id] {
    move to scratchpad
    [app_id=$pass_id] scratchpad show
    $t_pos
  }
  # emacs
  [app_id=$editor_id] {
    move to scratchpad
    [app_id=$editor_id] scratchpad show
    $t_pos
  }
}


# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym --to-code {
    $left        resize shrink width  30 px or 30 ppt
    $down        resize grow   height 30 px or 30 ppt
    $up          resize shrink height 30 px or 30 ppt
    $right       resize grow   width  30 px or 30 ppt

    Shift+$left  resize shrink width  5  px or 5 ppt
    Shift+$down  resize grow   height 5  px or 5 ppt
    Shift+$up    resize shrink height 5  px or 5 ppt
    Shift+$right resize grow   width  5  px or 5 ppt

    # same bindings, but for the arrow keys
    Left         resize shrink width  30 px or 30 ppt
    Down         resize grow   height 30 px or 30 ppt
    Up           resize shrink height 30 px or 30 ppt
    Right        resize grow   width  30 px or 30 ppt

    Shift+Left   resize shrink width  30  px or 30 ppt
    Shift+Down   resize grow   height 30  px or 30 ppt
    Shift+Up     resize shrink height 30  px or 30 ppt
    Shift+Right  resize grow   width  30  px or 30 ppt


    # back to normal: Enter or Escape
    Return mode "default"
    Escape mode "default"
  }
}

mode $layout_mode {
  # change container layout (stacked, tabbed, splitv, splith)
  bindsym --to-code {
    d layout stacking     ; mode "default"
    t layout tabbed       ; mode "default"
    s layout toggle split ; mode "default"
    v layout splitv       ; mode "default"
    h layout splith       ; mode "default"

    # back to normal: Enter or Escape
    Return mode "default"
    Escape mode "default"
  }
}

mode $power_mode {
  bindsym --to-code {
    F2 exec idle.sh kill 1; mode "default"
    F3 exec $lock; mode "default"
    F4 exec --no-startup-id systemctl -i reboot
    F5 exec --no-startup-id systemctl -i poweroff

    # back to normal: Enter or Escape
    Return mode "default"
    Escape mode "default"
  }
}

mode $notification_mode {
  bindsym --to-code {
    s exec makoctl set-mode do-not-disturb; mode "default"
    d exec makoctl set-mode default       ; mode "default"

    # back to normal: Enter or Escape
    Return mode "default"
    Escape mode "default"
  }
}


bindsym --to-code {
  # Scratchpad bindsym
  ## Main terminal
  F1           exec swaymsg [app_id=$term_id]   scratchpad show || exec $term ,  $t_pos
  ## backup terminal
  $mod+F1      exec swaymsg [app_id=$oterm_id]  scratchpad show || exec $oterm,  $t_pos
  ## editor
  $mod+x       exec swaymsg [app_id=$editor_id] scratchpad show || exec $editor, $t_pos
  ## keepassxc
  $mod+Shift+x exec swaymsg [app_id=$pass_id]   scratchpad show || exec $pass,   $t_pos

  # kill focused window
  $mod+q kill

  # start a program launcher
  $mod+d         exec $launch -l 30 -P 'Run: '
  $mod+Control+d exec fuzzel-launcher
  $mod+Shift+d   exec j4-dmenu-desktop --dmenu='bemenu -l 20 -p drun' \
                                       --display-binary \
                                       --use-xdg-de \
                                       --term=$term \
                                       --usage-log="$HOME/.local/log/j4.log"

  # change focus
  $mod+$left  focus left
  $mod+$down  focus down
  $mod+$up    focus up
  $mod+$right focus right

  # alternatively, you can use the cursor keys:
  $mod+Left   focus left
  $mod+Down   focus down
  $mod+Up     focus up
  $mod+Right  focus right

  # change focused container
  $mod+Tab       focus right
  $mod+Shift+Tab focus left

  # move focused window
  $mod+Shift+$left  move left
  $mod+Shift+$down  move down
  $mod+Shift+$up    move up
  $mod+Shift+$right move right

  # alternatively, you can use the cursor keys:
  $mod+Shift+Left   move left
  $mod+Shift+Down   move down
  $mod+Shift+Up     move up
  $mod+Shift+Right  move right

  # move cursor using keys:
  $mod+Control+$left  seat - cursor move -10  0
  $mod+Control+$down  seat - cursor move  0   10
  $mod+Control+$up    seat - cursor move  0  -10
  $mod+Control+$right seat - cursor move  10  0

  $mod+Control+Left   seat - cursor move -10  0
  $mod+Control+Down   seat - cursor move  0   10
  $mod+Control+Up     seat - cursor move  0  -10
  $mod+Control+Right  seat - cursor move  10  0

  # split in horizontal orientation
  $mod+period split h

  # split in vertical orientation
  $mod+comma  split v

  # enter fullscreen mode for the focused container
  $mod+f fullscreen toggle

  # toggle tiling / floating
  $mod+Shift+space   floating toggle

  # change focus between tiling / floating windows
  $mod+Control+space focus mode_toggle

  # focus the parent container
  $mod+Shift+f       focus parent

  # switch to workspace
  $mod+1 workspace 1
  $mod+2 workspace 2
  $mod+3 workspace 3
  $mod+4 workspace 4
  $mod+5 workspace 5
  $mod+6 workspace 6
  $mod+7 workspace 7
  $mod+8 workspace 8
  $mod+9 workspace 9
  $mod+0 workspace 10

  # move focused container to workspace
  $mod+Shift+1 move container to workspace 1
  $mod+Shift+2 move container to workspace 2
  $mod+Shift+3 move container to workspace 3
  $mod+Shift+4 move container to workspace 4
  $mod+Shift+5 move container to workspace 5
  $mod+Shift+6 move container to workspace 6
  $mod+Shift+7 move container to workspace 7
  $mod+Shift+8 move container to workspace 8
  $mod+Shift+9 move container to workspace 9
  $mod+Shift+0 move container to workspace 10

  # reload the configuration file
  $mod+Shift+c reload

  # modes
  $mod+r  mode "resize"
  $mod+t  mode $layout_mode
  $mod+F2 mode $power_mode

  # exit sway (logs you out of your session)
  $mod+Shift+e exec swaynag -t warning \
                            -m 'Hello. Do you really want to exit sway? This will end your Wayland session.' \
                            -b 'Suspend' 'systemctl suspend' \
                            -b 'Lock' '$lock' \
                            -b 'Shutdown' 'systemctl -i poweroff' \
                            -b 'Reboot' 'systemctl -i reboot' \
                            -b 'Yes, exit sway' 'swaymsg exit' \
                            --button-background=#FF9100 \
                            --button-border-size=3px \
                            --border=#FCC99D \
                            --text=#092E47 \
                            --font=Hack Nerd Font Mono 16 \
                            --background=#282828

  # browser
  $mod+c         exec $browser
  $mod+Control+c exec $o_browser

  # pulseaudio
  $mod+p exec pavucontrol

  # mpc script
  $mod+m exec menu-mpd.sh

  # radio
  $mod+Shift+p exec alacritty -e nvlc ~/.config/vlc/radio.xspf

  # screenshot
  $mod+Shift+s exec alacritty -e grimshot save area

  # get clipboard history
  $mod+a exec clipman pick --max-items=1000 -t CUSTOM -T'fuzzel-dmenu --width 150 -P "Clipman: "'
  # $mod+a exec clipman pick --max-items=1000 -t bemenu -T'-l 30 -p "clipman: "'

  # dismiss notification
  $mod+n exec makoctl dismiss
  $mod+Shift+n exec makoctl menu $launch-dmenu -P 'Select Action: ' && makoctl dismiss

  # networkmanager-dmenu
  $mod+w exec networkmanager_dmenu

  # Switches to the previously focused workspace.
  $mod+z workspace back_and_forth

  # Pulse Audio controls
  XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% # increase sound volume
  XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% # decrease sound volume
  XF86AudioMute        exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # toggle mute sound

  # mic settings
  $mod+space     exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 0 # mute mic
  XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle # toggle mute mic
  $mod+Shift+m   exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle # toggle mute mic

  # Sreen brightness controls
  XF86MonBrightnessUp   exec light -A 20 # increase screen brightness
  XF86MonBrightnessDown exec light -U 20 # decrease screen brightness

  XF86ScreenSaver exec idle.sh kill 1
}

bindsym --release {
  # The middle button over a titlebar kills the window
  $mod+button2 kill
  button2      kill

  # Unmute mic on release
  $mod+space   exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 1 # unmute mic
}

# Start swaybar to display a workspace bar (plus the system information swaystatus
# finds out, if available)
bar {
  colors {
    # class            border    backgr.   text
    background         #282828AA
    statusline         #E1F5A9AA
    focused_separator  #6A0888AA
    focused_statusline #98971AAA
    focused_workspace  #B16286AA #B8BB26AA #FFFFFF
    active_workspace   #333333AA #331A00AA #FFFFFF
    inactive_workspace #333333AA #222222AA #888888
    urgent_workspace   #2f343aAA #EB4D4BAA #FFFFFF
    binding_mode       #2f343aAA #FF0000AA #FFFFFF
  }

  font $font
  pango_markup enabled
  position top
  status_command i3status-rs --exit-on-error 2> ~/.local/log/i3status.log # env RUST_BACKTRACE=full
  workspace_buttons yes
  tray {
    icon_theme $icon_theme
    bindsym {
      # The middle button over a bar run nmtui
      button2 exec alacritty -e nmtui
    }
  }
}

# gaps
default_border pixel 3
smart_borders on
smart_gaps on
gaps {
  inner 2
  outer 2
}

# my settings
# class                 border   backgr.   text    indicator  child border
client.focused          #689D6A  #D65D0EAA #EBDBB2 #00DA8E    #4B610B
client.focused_inactive #689D6A  #D79921AA #504945 #484E50    #4B610B
client.unfocused        #689D6A  #282828AA #FADB2F #282828    #4B610B
client.urgent           #689D6A  #CC241DAA #A89984 #FB4934    #4B610B

exec systemctl --user import-environment \
    SWAYSOCK \
    WAYLAND_DISPLAY

exec hash dbus-update-activation-environment 2>/dev/null \
  && dbus-update-activation-environment --systemd SWAYSOCK \
                                                  WAYLAND_DISPLAY 2>/dev/null
exec --no-startup-id wl-paste -t text --watch clipman.sh &
exec $term
exec swaykbdd
exec touchegg
exec network-startup
exec idle.sh
exec systemctl --user start user-graphical-session.target
