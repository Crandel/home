(:name eglot
       :type github
       :pkgname "joaotavora/eglot"
       :description "Python Language Server Protocol"
       :minimum-emacs-version "26"
       :compile (".")
       :load-path (".")
       :post-init (progn
                    (setq eglot-server-programs '(
                            (scala-mode . ("metals-emacs"))
                            (rust-mode . (eglot-rls "rls"))
                            (python-mode . ("pyls"))
                            ((js-mode
                              typescript-mode)
                             . ("javascript-typescript-stdio"))
                            (sh-mode . ("bash-language-server" "start"))
                            ((c++-mode c-mode) . ("ccls"))
                            (haskell-mode . ("hie-wrapper"))
                            (go-mode . ("go-langserver" "-mode=stdio"
                                        "-gocodecompletion"))
                            (java-mode . eglot--eclipse-jdt-contact)
                    ))

                    (add-hook 'eglot--managed-mode-hook (lambda ()
                                                         (flymake-mode -1)))
                    (add-hook 'python-mode-hook '(lambda()
                                                   (eglot-ensure)
                                                   (setq-default flymake-diagnostic-functions nil)
                                                   )
                              )
                    (add-hook 'c++-mode-hook '(lambda()
                                                (eglot-ensure)
                                                )
                              )
                    (add-hook 'scala-mode-hook '(lambda()
                                                (eglot-ensure)
                                                )
                              )
                    (defun projectile-project-find-function (dir)
                      (let* ((root (projectile-project-root dir)))
                        (and root (cons 'transient root))))

                    (with-eval-after-load 'project
                      (add-to-list 'project-find-functions 'projectile-project-find-function))
                    )
       )
