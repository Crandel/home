(:name helm
       :description "Emacs incremental completion and narrowing framework"
       :type github
       :pkgname "emacs-helm/helm"
       :autoloads "helm-autoloads"
       :build (("make"))
       :build/darwin `(("make" ,(format "EMACS_COMMAND=%s" el-get-emacs)))
       ;; Windows probably doesn't have make available so we fake it.
       :build/windows-nt
       (let ((generated-autoload-file (expand-file-name "helm-autoloads.el")) \
             (backup-inhibited t))
         (update-directory-autoloads default-directory)
         nil)
       :features ("helm-config" "ido")
       :post-init (progn
                    (setq helm-mode-fuzzy-match                 t
                          helm-split-window-in-side-p           t ; open helm buffer inside current window, not occupy whole other window
                          helm-completion-in-region-fuzzy-match t
                          helm-candidate-number-limit           100
                          helm-move-to-line-cycle-in-source     t ; move to end or beginning of source when reaching top or bottom of source.
                          helm-ff-search-library-in-sexp        t ; search for library in `require' and `declare-function' sexp.
                          helm-ff-file-name-history-use-recentf t
                          helm-scroll-amount                    8 ; scroll 8 lines other window using M-<next>/M-<prior>
                          helm-buffers-fuzzy-matching           t
                          helm-autoresize-max-height            30
                          helm-autoresize-min-height            10
                          helm-recentf-fuzzy-match              t)
                    (helm-mode t)
                    (add-to-list 'helm-completing-read-handlers-alist '(find-file-read-only . ido))
                    (add-to-list 'helm-completing-read-handlers-alist '(find-file . ido))
                    (helm-autoresize-mode 1)
                    ))
